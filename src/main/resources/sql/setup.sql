-- USERS TABLE
CREATE TABLE IF NOT EXISTS users (id SERIAL NOT NULL UNIQUE, mail VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(128) NOT NULL, PRIMARY KEY (id));

--GAMESERVER DRIVERS TABLE
CREATE TABLE IF NOT EXISTS gameserver_drivers (id SERIAL NOT NULL UNIQUE, name VARCHAR(100) NOT NULL UNIQUE, class VARCHAR(100) NOT NULL, PRIMARY KEY (name));

-- GAMESERVERS TABLE
CREATE TABLE IF NOT EXISTS gameservers (id SERIAL NOT NULL UNIQUE, driver INTEGER NOT NULL, name VARCHAR(100) NOT NULL UNIQUE, owner INTEGER NOT NULL, host VARCHAR(100) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (driver) REFERENCES gameserver_drivers(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (owner) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE);

-- TICKET LABELS TABLE
CREATE TABLE IF NOT EXISTS ticket_labels (id SERIAL NOT NULL UNIQUE, name VARCHAR(100) NOT NULL UNIQUE, PRIMARY KEY (id));

-- TICKET PRIORITIES TABLE
CREATE TABLE IF NOT EXISTS ticket_priorities (id SERIAL NOT NULL UNIQUE, name VARCHAR(100) NOT NULL UNIQUE, priority INTEGER NOT NULL UNIQUE, PRIMARY KEY (id));

-- TICKETS TABLE
CREATE TABLE IF NOT EXISTS tickets (id SERIAL NOT NULL UNIQUE, created BIGINT NOT NULL, owner INTEGER NOT NULL, name VARCHAR(100) NOT NULL,
    label INTEGER NOT NULL, priority INTEGER NOT NULL, assigned INTEGER NOT NULL, closed BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (id),
    FOREIGN KEY (owner) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (label) REFERENCES ticket_labels(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (priority) REFERENCES ticket_priorities(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (assigned) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE);

-- TICKET ANSWERS TABLE
CREATE TABLE IF NOT EXISTS ticket_answers (id SERIAL NOT NULL UNIQUE, ticket INTEGER NOT NULL, created BIGINT NOT NULL, content TEXT NOT NULL,
    PRIMARY KEY(id), FOREIGN KEY (ticket) REFERENCES tickets(id) ON DELETE CASCADE ON UPDATE CASCADE);

-- FTP ACCOUNTS TABLE
CREATE TABLE IF NOT EXISTS ftp_accounts (id SERIAL NOT NULL UNIQUE, name VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(100) NOT NULL,
    directory VARCHAR(100) NOT NULL, host VARCHAR(100) NOT NULL,
    PRIMARY KEY (id));

-- DATABASE DRIVERS TABLE
CREATE TABLE IF NOT EXISTS database_drivers (id SERIAL NOT NULL UNIQUE, name VARCHAR(100) NOT NULL UNIQUE, class VARCHAR(100) NOT NULL, PRIMARY KEY (name));

-- DATABASES TABLE
CREATE TABLE IF NOT EXISTS databases (id SERIAL NOT NULL UNIQUE, driver INTEGER NOT NULL, name VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(100) NOT NULL, host VARCHAR(100) NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (driver) REFERENCES database_drivers(id) ON DELETE CASCADE ON UPDATE CASCADE);